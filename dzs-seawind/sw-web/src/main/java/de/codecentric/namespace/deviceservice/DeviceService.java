
package de.codecentric.namespace.deviceservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import de.codecentric.namespace.deviceservice.general.DeviceInformationReturn;
import de.codecentric.namespace.deviceservice.general.DeviceReturn;
import de.codecentric.namespace.deviceservice.general.ForecastRequest;
import de.codecentric.namespace.deviceservice.general.ForecastReturn;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DeviceService", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/")
@XmlSeeAlso({
    de.codecentric.namespace.deviceservice.datatypes.ObjectFactory.class,
    de.codecentric.namespace.deviceservice.exception.ObjectFactory.class,
    de.codecentric.namespace.deviceservice.general.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface DeviceService {


    /**
     * Gets Information for each DeviceID
     * 
     * @param zip
     * @return
     *     returns de.codecentric.namespace.deviceservice.general.DeviceInformationReturn
     * @throws DeviceException
     */
    @WebMethod(operationName = "GetDeviceInformation", action = "http://www.codecentric.de/namespace/deviceservice/GetDeviceInformation")
    @WebResult(name = "GetDeviceInformationResult", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
    @RequestWrapper(localName = "GetDeviceInformation", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetDeviceInformation")
    @ResponseWrapper(localName = "GetDeviceInformationResponse", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetDeviceInformationResponse")
    public DeviceInformationReturn getDeviceInformation(
        @WebParam(name = "ZIP", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
        String zip)
        throws DeviceException
    ;

    /**
     * Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly.
     * 
     * @param forecastRequest
     * @return
     *     returns de.codecentric.namespace.deviceservice.general.ForecastReturn
     * @throws DeviceException
     */
    @WebMethod(operationName = "GetCityForecastByZIP", action = "http://www.codecentric.de/namespace/deviceservice/GetCityForecastByZIP")
    @WebResult(name = "GetCityForecastByZIPResult", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
    @RequestWrapper(localName = "GetCityForecastByZIP", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetCityForecastByZIP")
    @ResponseWrapper(localName = "GetCityForecastByZIPResponse", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetCityForecastByZIPResponse")
    public ForecastReturn getCityForecastByZIP(
        @WebParam(name = "ForecastRequest", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
        ForecastRequest forecastRequest)
        throws DeviceException
    ;

    /**
     * Allows you to get your City's Device, which is updated hourly.
     * 
     * @param forecastRequest
     * @return
     *     returns de.codecentric.namespace.deviceservice.general.DeviceReturn
     * @throws DeviceException
     */
    @WebMethod(operationName = "GetCityDeviceByZIP", action = "http://www.codecentric.de/namespace/deviceservice/GetCityDeviceByZIP")
    @WebResult(name = "GetCityDeviceByZIPResult", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
    @RequestWrapper(localName = "GetCityDeviceByZIP", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetCityDeviceByZIP")
    @ResponseWrapper(localName = "GetCityDeviceByZIPResponse", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general", className = "de.codecentric.namespace.deviceservice.general.GetCityDeviceByZIPResponse")
    public DeviceReturn getCityDeviceByZIP(
        @WebParam(name = "ForecastRequest", targetNamespace = "http://www.codecentric.de/namespace/deviceservice/general")
        ForecastRequest forecastRequest)
        throws DeviceException
    ;

}
